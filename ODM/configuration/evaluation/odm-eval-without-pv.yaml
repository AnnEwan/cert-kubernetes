---
# Source: ibm-odm-dev/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: odm-eval-ibm-odm-dev
  labels:
    app: ibm-odm-dev
    chart: ibm-odm-dev-2.3.0
    release: odm-eval
    heritage: Tiller
    app.kubernetes.io/instance: odm-eval
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: ibm-odm-dev
    helm.sh/chart: ibm-odm-dev-2.3.0
spec:
  type: NodePort
  ports:
    - port: 9060
      targetPort: 9060
      protocol: TCP
  selector:
    run: ibm-odm-dev
    app: ibm-odm-dev
    release: odm-eval

---
# Source: ibm-odm-dev/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: odm-eval-ibm-odm-dev
  labels:
    app: ibm-odm-dev
    chart: ibm-odm-dev-2.3.0
    release: odm-eval
    heritage: Tiller
    app.kubernetes.io/instance: odm-eval
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: ibm-odm-dev
    helm.sh/chart: ibm-odm-dev-2.3.0
spec:
  replicas: 1
  selector:
    matchLabels:
      release: odm-eval
      run: ibm-odm-dev
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: ibm-odm-dev
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: ibm-odm-dev
        helm.sh/chart: ibm-odm-dev
        run: ibm-odm-dev
        app: ibm-odm-dev
        chart: ibm-odm-dev-2.3.0
        release: odm-eval
        heritage: Tiller
      annotations:
        productName: "IBM Operational Decision Manager for Developers"
        productID: "OperationalDecisionManagerForDevelopers"
        productVersion: 8.10.3.0
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          #If you specify multiple nodeSelectorTerms associated with nodeAffinity types,
          #then the pod can be scheduled onto a node if one of the nodeSelectorTerms is satisfied.
          #
          #If you specify multiple matchExpressions associated with nodeSelectorTerms,
          #then the pod can be scheduled onto a node only if all matchExpressions can be satisfied.
          #
          #valid operators: In, NotIn, Exists, DoesNotExist, Gt, Lt
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      volumes:
      containers:
        - name: ibm-odm-dev
          image: ibmcom/odm:8.10.3.0_2.3.0-amd64
          securityContext:
            runAsUser: 1001
            runAsNonRoot: true
            privileged: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          imagePullPolicy: IfNotPresent
          env:
          - name: LICENSE
            value: "view"
          - name: DB_TYPE
            value: "h2"
          - name: SAMPLE
            value: "true"
          - name: DC_PERSISTENCE_LOCALE
            value: "en_US"
          - name: "RELEASE_NAME"
            value: odm-eval
          ports:
          - containerPort: 9060
    #
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /decisioncenter/healthCheck
              port: 9060
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 45
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /decisioncenter/healthCheck
              port: 9060
            initialDelaySeconds: 300
            periodSeconds: 10
            failureThreshold: 10
          resources:
            limits:
              cpu: 2
              memory: 2048Mi
            requests:
              cpu: 1
              memory: 1024Mi
            
