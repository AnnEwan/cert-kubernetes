apiVersion: icp4a.ibm.com/v1
kind: ICP4ACluster
metadata:
  name: ibm-dba
  labels:
    app.kubernetes.io/instance: ibm-dba
    app.kubernetes.io/managed-by: ibm-dba
    app.kubernetes.io/name: ibm-dba
    release: 19.0.3
spec:
  ## Shared configuration among all components
  shared_configuration:
    image_pull_secrets:
    - admin.registrykey
    images:
      keytool_job_container:
        repository: cp.icr.io/cp/cp4a/ums/dba-keytool-jobcontainer
        tag: 19.0.3
      dbcompatibility_init_container:
        repository: cp.icr.io/cp/cp4a/aae/dba-dbcompatibility-initcontainer
        tag: 19.0.3
      keytool_init_container:
        repository: cp.icr.io/cp/cp4a/ums/dba-keytool-initcontainer
        tag: 19.0.3
      umsregistration_initjob:
        repository: cp.icr.io/cp/cp4a/aae/dba-umsregistration-initjob
        tag: 19.0.3
      pull_policy: IfNotPresent
    root_ca_secret: icp4a-root-ca 
    encryption_key_secret: icp4a-shared-key-secret
    existing_claim_name: ums-jdbc-pvc
    sc_deployment_platform: OCP
    trusted_certificate_list: []
  ldap_configuration:
    # The candidate value is "IBM Security Directory Server" or "Microsoft Active Directory"
    lc_selected_ldap_type: "IBM Security Directory Server"
    lc_ldap_server: "<LDAP IP ADDRESS OR HOSTNAME>"
    lc_ldap_port: "389"
    lc_bind_secret: ibm-fncm-secret # The secret is expected to have ldapUsername and ldapPassword keys
    lc_ldap_base_dn: "dc=hqpsidcdom,dc=com"
    lc_ldap_ssl_enabled: false
    lc_ldap_ssl_secret_name: ""
    lc_ldap_user_name_attribute: "*:cn"
    lc_ldap_user_display_name_attr: "cn"
    lc_ldap_group_base_dn: "dc=hqpsidcdom,dc=com"
    lc_ldap_group_name_attribute: "*:cn"
    lc_ldap_group_display_name_attr: "cn"
    lc_ldap_group_membership_search_filter: "(|(&(objectclass=groupOfNames)(member={0}))(&(objectclass=groupOfUniqueNames)(uniqueMember={0})))"
    lc_ldap_group_member_id_map: "ibm-allGroups:member;ibm-allGroups:uniqueMember;groupOfNames:member;groupOfUniqueNames:uniqueMember"
    ca_ldap_configuration:
      lc_user_filter: "(&(cn={{ '{{' }}username{{ '}}'}})(objectclass=person))"
    ad:
      lc_ad_gc_host: ""
      lc_ad_gc_port: ""
      lc_user_filter: "(&(cn=%v)(objectclass=person))"
      lc_group_filter: "(&(cn=%v)(|(objectclass=groupOfNames)(objectclass=groupOfUniqueNames)(objectclass=groupOfURLs)))"
    tds:
      lc_user_filter: "(&(cn=%v)(objectclass=person))"
      lc_group_filter: "(&(cn=%v)(|(objectclass=groupofnames)(objectclass=groupofuniquenames)(objectclass=groupofurls)))"
  datasource_configuration:
    # The candidate value is "db2" or "db2HADR" or "oracle" or "sqlserver"
    dc_gcd_datasource:
      dc_database_type: "db2"
      dc_common_gcd_datasource_name: "FNGCDDS"
      dc_common_gcd_xa_datasource_name: "FNGCDDSXA"
      database_servername: "<DB2 IP ADDRESS OR HOSTNAME>"
      database_name: "GCDDB"
      database_port: "50000"
    dc_os_datasources:
    - dc_database_type: "db2"
      dc_common_os_datasource_name: "FNOS1DS"
      dc_common_os_xa_datasource_name: "FNOS1DSXA"
      database_servername: "<DB2 IP ADDRESS OR HOSTNAME>"
      database_name: "PEDB"
      database_port: "50000"
    dc_icn_datasource:
      dc_database_type: "db2"
      dc_common_icn_datasource_name: "ECMClientDS"
      database_servername: "<DB2 IP ADDRESS OR HOSTNAME>"
      database_port: "50000"
      database_name: "ICNDB"
    dc_ums_datasource: # Credentials are read from ums_configuration.db_secret_name
      dc_ums_oauth_type: db2 # derby (for test), db2, or oracle
      dc_ums_oauth_host: <DB2 IP ADDRESS OR HOSTNAME>
      dc_ums_oauth_port: 50000
      dc_ums_oauth_name: UMSDB
      dc_ums_oauth_ssl: false
      dc_ums_oauth_ssl_secret_name:
      dc_ums_oauth_driverfiles:
      dc_ums_oauth_alternate_hosts:
      dc_ums_oauth_alternate_ports:
      dc_ums_teamserver_type: db2 # derby (for test), db2, oracle, or mssql
      dc_ums_teamserver_host: <DB2 IP ADDRESS OR HOSTNAME>
      dc_ums_teamserver_port: 50000
      dc_ums_teamserver_name: UMSDB
      dc_ums_teamserver_ssl: false
      dc_ums_teamserver_ssl_secret_name:
      dc_ums_teamserver_driverfiles:
      dc_ums_teamserver_alternate_hosts:
      dc_ums_teamserver_alternate_ports:
  monitoring_configuration:
     mon_metrics_writer_option: "4"
     mon_metrics_service_endpoint: "9.9.9.9:2003"
     mon_bmx_group: "ibm"
     mon_bmx_metrics_scope_id: "1"
     mon_bmx_api_key: "testkey"
     mon_ecm_metrics_collect_interval: 60
     mon_ecm_metrics_flush_interval: 60
     mon_enable_plugin_pch: "test"
     mon_enable_plugin_mbean: "pch-mbean"
  ## Logging settings
  logging_configuration:
     mon_log_parse: "parse1"
     mon_log_shipper_option: "1"
     mon_log_service_endpoint: "9.9.9.9:5044"
     mon_bmx_logs_logging_token: "testtoken"
     mon_bmx_space_id: "1"
  ecm_configuration:
    fncm_secret_name: ibm-fncm-secret
    fncm_ext_tls_secret_name: "{{ meta.name }}-fncm-ext-tls-secret"
    fncm_auth_ca_secret_name: "{{ meta.name }}-fncm-auth-ca-secret"
    cpe:
      hostname: cpe-{{ meta.namespace }}.<IP ADDRESS>.nip.io
      arch:
        amd64: "3 - Most preferred"
      replica_count: 1
      image:
        repository: cp.icr.io/cp/cp4a/fncm/cpe
        tag: ga-554-p8cpe
        pull_policy: IfNotPresent 
      ## Logging for workloads
      log:
       format: json
      ## Resources
      resources:
        requests:
          cpu: 500m
          memory: 512Mi
        limits:
          cpu: 1
          memory: 3072Mi
      ## Horizontal Pod Autoscaler
      auto_scaling:
        enabled: false 
        max_replicas: 3
        min_replicas: 1
        target_cpu_utilization_percentage: 80
      ## Content Platform Engine production settings
      cpe_production_setting:
        time_zone: Etc/UTC
        jvm_initial_heap_percentage: 18
        jvm_max_heap_percentage: 33
        jvm_customize_options: "-DFileNet.WSI.AutoDetectLTPAToken=true"
        gcd_jndi_name: FNGCDDS
        gcd_jndixa_name: FNGCDDSXA
        license_model: FNCM.PVUNonProd
        license: accept
      monitor_enabled: false
      logging_enabled: true
      collectd_enable_plugin_write_graphite: false
      ## Specify the name of the Existing Claim to be used by your application
      datavolume:
        existing_pvc_for_cpe_cfgstore: "cpe-cfgstore-pvc"
        existing_pvc_for_cpe_logstore: "cpe-logstore-pvc"
        existing_pvc_for_cpe_filestore: "cpe-filestore-pvc"
        existing_pvc_for_cpe_icmrulestore: "cpe-icmrules-pvc"
        existing_pvc_for_cpe_textextstore: "cpe-textext-pvc"
        existing_pvc_for_cpe_bootstrapstore: "cpe-bootstrap-pvc"
        existing_pvc_for_cpe_fnlogstore: "cpe-fnlogstore-pvc"
      probe:
        readiness:
          initial_delay_seconds: 120
          period_seconds: 5
          timeout_seconds: 10
          failure_threshold: 6
        liveness:
          initial_delay_seconds: 600
          period_seconds: 5
          timeout_seconds: 5
          failure_threshold: 6
      image_pull_secrets:
    cmis:
      hostname: cmis-{{ meta.namespace }}.<IP ADDRESS>.nip.io
      arch:
        amd64: "3 - Most preferred"
      replica_count: 1
      image:
        repository: cp.icr.io/cp/cp4a/fncm/cmis
        tag: ga-304-cmis-if009
        pull_policy: IfNotPresent
      ## Logging for workloads
      log:
       format: json
      ## Resources
      resources:
        requests:
          cpu: 500m
          memory: 256Mi
        limits:
          cpu: 1
          memory: 1536Mi
      ## Horizontal Pod Autoscaler
      auto_scaling:
        enabled: true
        max_replicas: 3
        min_replicas: 1
        target_cpu_utilization_percentage: 80
      ## Content Management Interoperability Services (CMIS) production settings
      cmis_production_setting:
        cpe_url:
        time_zone: Etc/UTC
        jvm_initial_heap_percentage: 40
        jvm_max_heap_percentage: 66
        jvm_customize_options: ""
        checkout_copycontent: true
        default_maxitems: 25
        cvl_cache: true
        secure_metadata_cache: false
        filter_hidden_properties: true
        querytime_limit: 180
        resumable_queries_forrest: true
        escape_unsafe_string_characters: false
        max_soap_size: 180
        print_pull_stacktrace: false
        folder_first_search: false
        ignore_root_documents: false
        supporting_type_mutability: false
        license: accept
      monitor_enabled: false
      logging_enabled: false
      collectd_enable_plugin_write_graphite: false
      ## Specify the name of the Existing Claim to be used by your application
      datavolume:
        existing_pvc_for_cmis_cfgstore: "cmis-cfgstore-pvc"
        existing_pvc_for_cmis_logstore: "cmis-logstore-pvc"
      probe:
        readiness:
          initial_delay_seconds: 90
          period_seconds: 5
          timeout_seconds: 10
          failure_threshold: 6
        liveness:
          initial_delay_seconds: 180
          period_seconds: 5
          timeout_seconds: 5
          failure_threshold: 6
      image_pull_secrets:
        name: "admin.registrykey"
  navigator_configuration:
    ban_secret_name: ibm-ban-secret
    ban_ext_tls_secret_name: "{{ meta.name }}-ban-ext-tls-secret"
    ban_auth_ca_secret_name: "{{ meta.name }}-ban-auth-ca-secret"
    arch:
      amd64: "3 - Most preferred"
    replica_count: 1
    image:
      repository: cp.icr.io/cp/cp4a/ban/navigator-sso
      tag: ga-307-icn
      pull_policy: IfNotPresent
      arbitrary_uid_enabled: true
    log:
      format: json
       ## Resource and autoscaling settings
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 1
        memory: 1536Mi
    auto_scaling:
      enabled: false
      max_replicas: 3
      min_replicas: 1
      target_cpu_utilization_percentage: 80
       ## Route public hostname
    hostname: icn-{{ meta.namespace }}.<IP ADDRESS>.nip.io
       ## IBM Content Navigator production settings
    icn_production_setting:
      timezone: Etc/UTC
      jvm_initial_heap_percentage: 40
      jvm_max_heap_percentage: 66
      jvm_customize_options: ""
      icn_db_type: db2
      icn_jndids_name: ECMClientDS
      icn_schema: LJMICNXA
      icn_table_space: LJMICNTB
      icn_admin: CEADMIN
      license: accept
      enable_appcues: false
      allow_remote_plugins_via_http: true
      monitor_enabled: false
      logging_enabled: false
      collectd_enable_plugin_write_graphite: false
      datavolume:
        existing_pvc_for_icn_cfgstore: "icn-cfgstore"
        existing_pvc_for_icn_logstore: "icn-logstore"
        existing_pvc_for_icn_pluginstore: "icn-pluginstore"
        existing_pvc_for_icnvw_cachestore: "icn-vw-cachestore"
        existing_pvc_for_icnvw_logstore: "icn-vw-logstore"
        existing_pvc_for_icn_aspera: "icn-asperastore"
      probe:
        readiness:
          initial_delay_seconds: 120
          period_seconds: 5
          timeout_seconds: 10
          failure_threshold: 6
        liveness:
          initial_delay_seconds: 600
          period_seconds: 5
          timeout_seconds: 5
          failure_threshold: 6
      image_pull_secrets:
        name: "admin.registrykey"
  ums_configuration:
     is_openshift: true
     existing_claim_name:
     replica_count: 1
     service_type: Route
     hostname: ums-{{ meta.namespace }}.<IP ADDRESS>.nip.io
     port: 443
     images:
       ums:
         repository: cp.icr.io/cp/cp4a/ums/ums
         tag: 19.0.3
     admin_secret_name: ibm-dba-ums-secret
     db_secret_name: ibm-dba-ums-db-secret
     tls_secret_name: ibm-dba-ums-tls-secret
     jwt_secret_name: ibm-dba-ums-tls-secret
     ltpa_secret_name: ibm-dba-ums-ltpa-creation-secret
     external_tls_secret_name: ibm-dba-ums-external-tls-secret
     external_tls_ca_secret_name: ibm-dba-ums-external-tls-ca-secret
     oauth:
       client_manager_group:
     resources:
       limits:
         cpu: 500m
         memory: 512Mi
       requests:
         cpu: 200m
         memory: 256Mi
       ## Horizontal Pod Autoscaler
     autoscaling:
       enabled: false
       min_replicas: 2
       max_replicas: 5
       target_average_utilization: 98
     use_custom_jdbc_drivers: false
     use_custom_binaries: false
     custom_secret_name:
     custom_xml:
     logs:
       console_format: json
       console_log_level: INFO
       console_source: message,trace,accessLog,ffdc,audit
       trace_format: ENHANCED
       trace_specification: "*=info"
  application_engine_configuration:
  - name: ae-instance1
    hostname: ae-{{ meta.namespace }}.<IP ADDRESS>.nip.io
    port: 443
    admin_secret_name: ibm-dba-ae-admin-secret
    database:
      host: 169.45.208.53
      name: AEDB
      port: 50000
      ## If you set up DB2 HADR and want to use it, configure alternative_host and alternative_port. Otherwise, leave them blank.
      alternative_host:
      alternative_port:
    images:
      db_job:
        repository: cp.icr.io/cp/cp4a/aae/solution-server-helmjob-db
        tag: 19.0.3
      solution_server:
        repository: cp.icr.io/cp/cp4a/aae/solution-server
        tag: 19.0.3
  resource_registry_configuration:
    admin_secret_name: ibm-dba-resource-registry-admin-secret
    hostname: rr-{{ meta.namespace }}.<IP ADDRESS>.nip.io
    images:
      resource_registry:
        repository: cp.icr.io/cp/cp4a/aae/dba-etcd
        tag: 19.0.3
    port: 443
    service_type: Route
    replica_size: 3
    tls:
      tls_secret: ibm-dba-rr-tls-client-secret
  iaws_configuration:
    - name: instance1
      wfs:
        service_type: "Route"
        hostname: iaws-{{ meta.namespace }}.<IP ADDRESS>.nip.io 
        port: 443
        replicas: 1
        workflow_server_secret: ibm-baw-baw-secret
        tls:
          tls_secret_name: ibm-baw-tls
          tls_trust_list:
          - icp4a-root-ca
        image:
          repository: cp.icr.io/cp/cp4a/iaws/iaws-ps
          tag: 19.0.3
          pullPolicy: IfNotPresent
        pfs_bpd_database_init_job:
          repository: cp.icr.io/cp/cp4a/iaws/pfs-bpd-database-init-prod
          tag: 19.0.3
          pullPolicy: IfNotPresent
        upgrade_job:
          repository: cp.icr.io/cp/cp4a/iaws/iaws-psdb-handling
          tag: 19.0.3
          pullPolicy: IfNotPresent
        ibm_workplace_job:
          repository:  cp.icr.io/cp/cp4a/iaws/iaws-ibm-workplace
          tag: 19.0.3
          pull_policy: IfNotPresent
        database:
          ssl: false
          sslsecretname: ibm-dba-baw-db2-cacert
          type: "DB2"
          server_name: <DB2 IP ADDRESS OR HOSTNAME>
          database_name: "BPMDB"
          port: "50000"
          secret_name: ibm-baw-wfs-server-db-secret
          dbcheck:
            wait_time: 900
            interval_time: 15
          hadr:
            standbydb_host: 
            standbydb_port: 
            retryinterval: 
            maxretries: 
        content_integration:
          init_job_image:
            repository: cp.icr.io/cp/cp4a/iaws/iaws-ps-content-integration
            tag: 19.0.3
            pull_policy: IfNotPresent
          domain_name: "P8Domain"
          object_store_name: "DOCS"
          cpe_admin_secret: cpe-admin-secret
          event_handler_path: "/home/config/docs-config"
        appengine:
          hostname: ae-{{ meta.namespace }}.<IP ADDRESS>.nip.io
          admin_secret_name: ibm-dba-ae-admin-secret
        resource_registry:
          hostname: rr-{{ meta.namespace }}.<IP ADDRESS>.nip.io
          port: 443
          admin_secret_name: ibm-dba-resource-registry-admin-secret
        jms:
          image:
            repository: cp.icr.io/cp/cp4a/iaws/baw-jms-server
            tag: 19.0.3
            pull_policy: IfNotPresent
          tls:
            tls_secret_name: dummy-jms-tls-secret
          resources:
            limits:
              memory: "2Gi"
              cpu: "1000m"
            requests:
              memory: "512Mi"
              cpu: "200m"
          storage:
            persistent: true
            size: "20Gi"
            use_dynamic_provisioning: true
            access_modes:
            - ReadWriteOnce
            storage_class: "ibmc-file-bronze"
        resources:
          limits:
            cpu: 3
            memory: 2096Mi
          requests:
            cpu: 2
            memory: 1048Mi
        probe:
          ws:
            liveness_probe:
              initial_delay_seconds: 240
            readinessProbe:
              initial_delay_seconds: 180
        logs:
          console_format: "json"
          console_log_level: "INFO"
          console_source: "message,trace,accessLog,ffdc,audit"
          message_format: "basic"
          trace_format: "ENHANCED"
          trace_specification: "*=info"
        custom_xml_secret_name:
        lombardi_custom_xml_secret_name: wfs-lombardi-custom-xml-secret
  pfs_configuration:
    pfs:
      hostname: pfs-{{ meta.namespace }}.<IP ADDRESS>.nip.io 
      port: 443
      service_type: Route
      image:
        repository: cp.icr.io/cp/cp4a/iaws/pfs
        tag: 19.0.3
        pull_policy: IfNotPresent
      liveness_probe:
        initial_delay_seconds: 60
      readiness_probe:
        initial_delay_seconds: 60
      replicas: 1
      service_account:
      anti_affinity: hard
      admin_secret_name: ibm-pfs-admin-secret
      config_dropins_overrides_secret: ibm-pfs-config
      resources_security_secret: ""
      external_tls_secret:
      external_tls_ca_secret:
      tls:
        tls_secret_name:
        tls_trust_list:
        - icp4a-root-ca
        - ibm-dba-ums-tls-secret
      resources:
        requests:
          cpu: 500m
          memory: 512Mi
        limits:
          cpu: 2
          memory: 4Gi
      saved_searches:
        index_name: ibmpfssavedsearches
        index_number_of_shards: 3
        index_number_of_replicas: 1
        index_batch_size: 100
        update_lock_expiration: 5m
        unique_constraint_expiration: 5m
      security:
        sso:
          domain_name:
          cookie_name: "ltpatoken2"
          ltpa:
            filename: "ltpa.keys"
            expiration: "120m"
            monitor_interval: "60s"
        ssl_protocol: SSL
      executor:
        max_threads: "80"
        core_threads: "40"
      rest:
        user_group_check_interval: "300s"
        system_status_check_interval: "60s"
        bd_fields_check_interval: "300s"
      custom_env_variables:
        names:
        secret:
      output:
        storage:
          use_dynamic_provisioning: true 
          size: 20Gi
          storage_class: "ibmc-file-bronze"
      logs:
        storage:
          use_dynamic_provisioning: true
          size: 20Gi
          storage_class: "ibmc-file-bronze"
      dba_resource_registry:
        image:
          repository: cp.icr.io/cp/cp4a/aae/dba-etcd
          tag: 19.0.3
          pull_policy: IfNotPresent
        lease_ttl: 120
        pfs_check_interval: 10
        pfs_connect_timeout: 10
        pfs_response_timeout: 30
        pfs_registration_key: /dba/appresources/IBM_PFS/PFS_SYSTEM
        tls_secret: ibm-dba-rr-tls-client-secret
        resources:
          limits:
            memory: 512Mi
            cpu: 500m
          requests:
            memory: 512Mi
            cpu: 200m
    elasticsearch:
      es_image:
        repository: cp.icr.io/cp/cp4a/iaws/pfs-elasticsearch-prod
        tag: 19.0.3
        pull_policy: IfNotPresent
      pfs_init_image:
        repository: cp.icr.io/cp/cp4a/iaws/pfs-init-prod
        tag: 19.0.3
        pull_policy: IfNotPresent
      nginx_image:
        repository: cp.icr.io/cp/cp4a/iaws/pfs-nginx-prod
        tag: 19.0.3
        pull_policy: IfNotPresent
      replicas: 1
      service_type: NodePort
      external_port:
      anti_affinity: hard
      service_account: ibm-pfs-es-service-account
      privileged: true
      probe_initial_delay: 90
      heap_size: "1024m"
      resources:
        limits:
          memory: "2Gi"
          cpu: "1000m"
        requests:
          memory: "1Gi"
          cpu: "100m"
      storage:
        persistent: true
        use_dynamic_provisioning: true 
        size: 20Gi
        storage_class: "ibmc-file-bronze"
      snapshot_storage:
        enabled: false
        use_dynamic_provisioning: false
        size: 20Gi
        storage_class_name: ""
        existing_claim_name: ""
      security:
        users_secret: ""
